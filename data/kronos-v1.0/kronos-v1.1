-- MySQL Script generated by MySQL Workbench
-- dom 05 jan 2020 00:25:49 -03
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema kronos_v1.1
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema kronos_v1.1
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `kronos_v1.1` DEFAULT CHARACTER SET utf8 ;
USE `kronos_v1.1` ;

-- -----------------------------------------------------
-- Table `kronos_v1.1`.`Endereco`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `kronos_v1.1`.`Endereco` (
  `codigo_endereco` INT NOT NULL AUTO_INCREMENT,
  `estado` CHAR(2) NOT NULL,
  `cidade` VARCHAR(50) NOT NULL,
  `bairro` VARCHAR(45) NOT NULL,
  `rua` VARCHAR(45) NOT NULL,
  `numero` VARCHAR(15) NOT NULL,
  PRIMARY KEY (`codigo_endereco`));


-- -----------------------------------------------------
-- Table `kronos_v1.1`.`Perfil`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `kronos_v1.1`.`Perfil` (
  `codigo_perfil` INT NOT NULL AUTO_INCREMENT,
  `descricao` TEXT NOT NULL,
  PRIMARY KEY (`codigo_perfil`));


-- -----------------------------------------------------
-- Table `kronos_v1.1`.`Usuario`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `kronos_v1.1`.`Usuario` (
  `codigo_usuario` INT NOT NULL AUTO_INCREMENT,
  `Endereco_codigo_endereco` INT NOT NULL,
  `Perfil_codigo_perfil` INT NOT NULL,
  `nome` VARCHAR(100) NOT NULL,
  `login` VARCHAR(20) NOT NULL,
  `senha` VARCHAR(100) NOT NULL,
  `status` TINYINT NOT NULL,
  `email` VARCHAR(100) NOT NULL,
  `data` DATE NULL,
  PRIMARY KEY (`codigo_usuario`),
  INDEX `fk_Admin_Endereco1_idx` (`Endereco_codigo_endereco` ASC),
  INDEX `fk_Admin_perfil1_idx` (`Perfil_codigo_perfil` ASC),
  CONSTRAINT `fk_Admin_Endereco1`
    FOREIGN KEY (`Endereco_codigo_endereco`)
    REFERENCES `kronos_v1.1`.`Endereco` (`codigo_endereco`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Admin_perfil1`
    FOREIGN KEY (`Perfil_codigo_perfil`)
    REFERENCES `kronos_v1.1`.`Perfil` (`codigo_perfil`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `kronos_v1.1`.`Aluno`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `kronos_v1.1`.`Aluno` (
  `codigo_aluno` INT NOT NULL AUTO_INCREMENT,
  `Endereco_codigo_endereco` INT NOT NULL,
  `Usuario_codigo_usuario` INT NULL,
  `nome_aluno` VARCHAR(100) NOT NULL,
  `data_nasc` DATE NOT NULL,
  `sexo` CHAR(1) NOT NULL,
  `rg` VARCHAR(15) NOT NULL,
  `cpf` VARCHAR(15) NOT NULL,
  `objetivo` VARCHAR(50) NULL,
  `email` VARCHAR(45) NULL,
  `status` TINYINT NOT NULL,
  `dependente` TINYINT NOT NULL,
  `codigo_aluno_dependente` INT NULL,
  `data_cadastro` DATE NOT NULL,
  PRIMARY KEY (`codigo_aluno`),
  INDEX `fk_Aluno_Endereco1_idx` (`Endereco_codigo_endereco` ASC),
  INDEX `fk_Aluno_Usuario1_idx` (`Usuario_codigo_usuario` ASC),
  CONSTRAINT `fk_Aluno_Endereco1`
    FOREIGN KEY (`Endereco_codigo_endereco`)
    REFERENCES `kronos_v1.1`.`Endereco` (`codigo_endereco`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Aluno_Usuario1`
    FOREIGN KEY (`Usuario_codigo_usuario`)
    REFERENCES `kronos_v1.1`.`Usuario` (`codigo_usuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `kronos_v1.1`.`Login`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `kronos_v1.1`.`Login` (
  `codigo_usuario` INT NOT NULL AUTO_INCREMENT,
  `usuario` VARCHAR(15) NOT NULL,
  `senha` VARCHAR(100) NOT NULL,
  `ativo` TINYINT NOT NULL,
  `Admin_codigo_admin` INT NOT NULL,
  `Aluno_codigo_aluno` INT NOT NULL,
  PRIMARY KEY (`codigo_usuario`),
  INDEX `fk_Usuario_Admin1_idx` (`Admin_codigo_admin` ASC),
  INDEX `fk_Login_Aluno1_idx` (`Aluno_codigo_aluno` ASC),
  CONSTRAINT `fk_Usuario_Admin1`
    FOREIGN KEY (`Admin_codigo_admin`)
    REFERENCES `kronos_v1.1`.`Usuario` (`codigo_usuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Login_Aluno1`
    FOREIGN KEY (`Aluno_codigo_aluno`)
    REFERENCES `kronos_v1.1`.`Aluno` (`codigo_aluno`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `kronos_v1.1`.`Plano`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `kronos_v1.1`.`Plano` (
  `codigo_plano` INT NOT NULL AUTO_INCREMENT,
  `status` TINYINT NOT NULL,
  `nome_plano` VARCHAR(50) NOT NULL,
  `taxa_adesao` FLOAT NOT NULL,
  `mensalidade` FLOAT NOT NULL,
  `descricao` TEXT(100) NULL,
  `dependentes` TINYINT NOT NULL,
  `qtd_dependentes` INT NULL,
  PRIMARY KEY (`codigo_plano`));


-- -----------------------------------------------------
-- Table `kronos_v1.1`.`Telefone`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `kronos_v1.1`.`Telefone` (
  `codigo_telefone` INT NOT NULL AUTO_INCREMENT,
  `Aluno_codigo_aluno` INT NOT NULL,
  `num_telefone` VARCHAR(15) NOT NULL,
  `num_celular` VARCHAR(15) NULL,
  PRIMARY KEY (`codigo_telefone`),
  INDEX `fk_Telefone_Aluno1_idx` (`Aluno_codigo_aluno` ASC),
  CONSTRAINT `fk_Telefone_Aluno1`
    FOREIGN KEY (`Aluno_codigo_aluno`)
    REFERENCES `kronos_v1.1`.`Aluno` (`codigo_aluno`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `kronos_v1.1`.`Horario`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `kronos_v1.1`.`Horario` (
  `codigo_horario` INT NOT NULL AUTO_INCREMENT,
  `periodo` VARCHAR(30) NOT NULL,
  `horario_treino` TIME NOT NULL,
  `limite` INT NULL,
  PRIMARY KEY (`codigo_horario`));


-- -----------------------------------------------------
-- Table `kronos_v1.1`.`Modalidade`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `kronos_v1.1`.`Modalidade` (
  `codigo_modalidade` INT NOT NULL AUTO_INCREMENT,
  `Horario_codigo_horario` INT NOT NULL,
  `nome_modalidade` VARCHAR(50) NOT NULL,
  `status` TINYINT NOT NULL,
  `descricao` VARCHAR(100) NULL,
  PRIMARY KEY (`codigo_modalidade`),
  INDEX `fk_Modalidade_Horario1_idx` (`Horario_codigo_horario` ASC),
  CONSTRAINT `fk_Modalidade_Horario1`
    FOREIGN KEY (`Horario_codigo_horario`)
    REFERENCES `kronos_v1.1`.`Horario` (`codigo_horario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `kronos_v1.1`.`Tipo_Treino`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `kronos_v1.1`.`Tipo_Treino` (
  `codigo_tipo_treino` INT NOT NULL AUTO_INCREMENT,
  `descricao` TEXT NOT NULL,
  PRIMARY KEY (`codigo_tipo_treino`));


-- -----------------------------------------------------
-- Table `kronos_v1.1`.`Treino`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `kronos_v1.1`.`Treino` (
  `codigo_treino` INT NOT NULL AUTO_INCREMENT,
  `tipo_treino` INT NOT NULL,
  `nome_treino` VARCHAR(100) NOT NULL,
  `descricao` TEXT(100) NULL,
  `status` TINYINT(1) NOT NULL,
  PRIMARY KEY (`codigo_treino`),
  INDEX `fk_Treino_Tipo_Treino1_idx` (`tipo_treino` ASC),
  CONSTRAINT `fk_Treino_Tipo_Treino1`
    FOREIGN KEY (`tipo_treino`)
    REFERENCES `kronos_v1.1`.`Tipo_Treino` (`codigo_tipo_treino`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `kronos_v1.1`.`Tipo_Exercicio`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `kronos_v1.1`.`Tipo_Exercicio` (
  `codigo_tipo_exercicio` INT NOT NULL AUTO_INCREMENT,
  `descricao` TEXT NOT NULL,
  PRIMARY KEY (`codigo_tipo_exercicio`));


-- -----------------------------------------------------
-- Table `kronos_v1.1`.`Exercicio`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `kronos_v1.1`.`Exercicio` (
  `codigo_exercicio` INT NOT NULL AUTO_INCREMENT,
  `Treino_codigo_treino` INT NOT NULL,
  `tipo_exercicio` INT NOT NULL,
  `nome_exercicio` VARCHAR(100) NOT NULL,
  `serie_repeticao` VARCHAR(15) NULL,
  `arquivo` VARCHAR(100) NULL,
  `descricao` TEXT(100) NULL,
  `duracao` TIME NULL,
  `peso_inicial` VARCHAR(45) NULL,
  PRIMARY KEY (`codigo_exercicio`),
  INDEX `fk_Exercicio_Treino1_idx` (`Treino_codigo_treino` ASC),
  INDEX `fk_Exercicio_Tipo_Exercicio1_idx` (`tipo_exercicio` ASC),
  CONSTRAINT `fk_Exercicio_Treino1`
    FOREIGN KEY (`Treino_codigo_treino`)
    REFERENCES `kronos_v1.1`.`Treino` (`codigo_treino`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Exercicio_Tipo_Exercicio1`
    FOREIGN KEY (`tipo_exercicio`)
    REFERENCES `kronos_v1.1`.`Tipo_Exercicio` (`codigo_tipo_exercicio`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `kronos_v1.1`.`Antropometria`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `kronos_v1.1`.`Antropometria` (
  `codigo_antropometria` INT NOT NULL AUTO_INCREMENT,
  `axilar_media` FLOAT NULL,
  `suprailiaca` FLOAT NULL,
  `coxa` FLOAT NULL,
  `panturrilha_medial` FLOAT NULL,
  `subescapular` FLOAT NULL,
  `triceps` FLOAT NULL,
  `abdominal` FLOAT NULL,
  PRIMARY KEY (`codigo_antropometria`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `kronos_v1.1`.`Avaliacao`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `kronos_v1.1`.`Avaliacao` (
  `codigo_avaliacao` INT NOT NULL AUTO_INCREMENT,
  `Aluno_codigo_aluno` INT NOT NULL,
  `Antropometria_codigo_antropometria` INT NOT NULL,
  `data_avaliacao` DATE NOT NULL,
  `idade` INT NOT NULL,
  `peso` FLOAT NOT NULL,
  `altura` FLOAT NOT NULL,
  `gordura` FLOAT NULL,
  `musculo` FLOAT NULL,
  `agua` FLOAT NULL,
  `imc` FLOAT NULL,
  `ossea` FLOAT NULL,
  `caloria` FLOAT NULL,
  PRIMARY KEY (`codigo_avaliacao`),
  INDEX `fk_Avaliacao_Aluno1_idx` (`Aluno_codigo_aluno` ASC),
  INDEX `fk_Avaliacao_Antropometria1_idx` (`Antropometria_codigo_antropometria` ASC),
  CONSTRAINT `fk_Avaliacao_Aluno1`
    FOREIGN KEY (`Aluno_codigo_aluno`)
    REFERENCES `kronos_v1.1`.`Aluno` (`codigo_aluno`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Avaliacao_Antropometria1`
    FOREIGN KEY (`Antropometria_codigo_antropometria`)
    REFERENCES `kronos_v1.1`.`Antropometria` (`codigo_antropometria`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `kronos_v1.1`.`Treino_Modalidade`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `kronos_v1.1`.`Treino_Modalidade` (
  `codigo_treino_modalidade` INT NOT NULL AUTO_INCREMENT,
  `Modalidade_codigo_modalidade` INT NOT NULL,
  `Treino_codigo_treino` INT NOT NULL,
  INDEX `fk_Treino_has_Modalidade_Modalidade1_idx` (`Modalidade_codigo_modalidade` ASC),
  INDEX `fk_Treino_has_Modalidade_Treino1_idx` (`Treino_codigo_treino` ASC),
  PRIMARY KEY (`codigo_treino_modalidade`),
  CONSTRAINT `fk_Treino_has_Modalidade_Treino1`
    FOREIGN KEY (`Treino_codigo_treino`)
    REFERENCES `kronos_v1.1`.`Treino` (`codigo_treino`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Treino_has_Modalidade_Modalidade1`
    FOREIGN KEY (`Modalidade_codigo_modalidade`)
    REFERENCES `kronos_v1.1`.`Modalidade` (`codigo_modalidade`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `kronos_v1.1`.`Mensalidade`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `kronos_v1.1`.`Mensalidade` (
  `codigo_mesalidade` INT NOT NULL AUTO_INCREMENT,
  `Aluno_codigo_aluno` INT NOT NULL,
  `Plano_codigo_plano` INT NOT NULL,
  `valor_total` FLOAT NOT NULL,
  `data_vencimento` DATE NOT NULL,
  `valor_recebido` FLOAT NULL,
  `data_pagamento` DATE NULL,
  `parcelas` INT NOT NULL,
  `status` TINYINT NOT NULL,
  PRIMARY KEY (`codigo_mesalidade`),
  INDEX `fk_Aluno_Plano_Plano1_idx` (`Plano_codigo_plano` ASC),
  INDEX `fk_Mensalidade_Aluno1_idx` (`Aluno_codigo_aluno` ASC),
  CONSTRAINT `fk_Aluno_Plano_Plano1`
    FOREIGN KEY (`Plano_codigo_plano`)
    REFERENCES `kronos_v1.1`.`Plano` (`codigo_plano`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Mensalidade_Aluno1`
    FOREIGN KEY (`Aluno_codigo_aluno`)
    REFERENCES `kronos_v1.1`.`Aluno` (`codigo_aluno`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `kronos_v1.1`.`Aluno_Modalidade`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `kronos_v1.1`.`Aluno_Modalidade` (
  `codigo_aluno_modalidade` INT NOT NULL AUTO_INCREMENT,
  `Aluno_codigo_aluno` INT NOT NULL,
  `Modalidade_codigo_modalidade` INT NOT NULL,
  PRIMARY KEY (`codigo_aluno_modalidade`),
  INDEX `fk_Aluno_has_Modalidade_Modalidade1_idx` (`Modalidade_codigo_modalidade` ASC),
  INDEX `fk_Aluno_has_Modalidade_Aluno1_idx` (`Aluno_codigo_aluno` ASC),
  CONSTRAINT `fk_Aluno_has_Modalidade_Aluno1`
    FOREIGN KEY (`Aluno_codigo_aluno`)
    REFERENCES `kronos_v1.1`.`Aluno` (`codigo_aluno`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Aluno_has_Modalidade_Modalidade1`
    FOREIGN KEY (`Modalidade_codigo_modalidade`)
    REFERENCES `kronos_v1.1`.`Modalidade` (`codigo_modalidade`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;


INSERT INTO `Tipo_Exercicio` (`codigo_tipo_exercicio`, `descricao`) VALUES
(1, 'Aparelho'),
(2, 'Aeróbico'),
(3, 'Anaeróbico');

INSERT INTO `Perfil` (`codigo_perfil`, `descricao`) VALUES
(1, 'Master'),
(2, 'Admin'),
(3, 'Instrutor'),
(4, 'Aluno');

INSERT INTO `Tipo_Treino` (`codigo_tipo_treino`, `descricao`) VALUES
(1, 'Metabólico'),
(2, 'Hipertrofia'),
(3, 'Intervalado'),
(4, 'Funcional');

INSERT INTO `Endereco` (`codigo_endereco`, `estado`, `cidade`, `bairro`, `rua`, `numero`) VALUES
(1, 'PR', 'Douradina', 'Jardim Molivera', 'Catanduva', '210'),
(2, 'MS', 'Campo Grande', 'Campo Belo', 'Rua Anchieta', '5667'),
(3, 'RN', 'Augusto Severo', 'Vila Olimpia', 'São Paulo', '5667');

INSERT INTO `Usuario` (`codigo_usuario`, `Endereco_codigo_endereco`, `Perfil_codigo_perfil`, `nome`, `login`, `senha`, `status`, `email`, `data`) VALUES
(1, 1, 1, 'Master', 'master', '$2y$10$il3cPp0FHZ65w7WWbMF9PuyufpJawMXp6dbE7JVHzmF6Ogbwn/VvC', 1, 'master@master.com', '2020-01-04'),
(2, 2, 2, 'Admin', 'admin', '$2y$10$6vwRPSvkrB6OZ9VMeBhilufdwG/Cb6ntPwXpth4zAvH8XWXp.ghr.', 1, 'admin@admin.comf', '2020-01-04'),
(3, 3, 3, 'Instrutor', 'instrutor', '$2y$10$/g28m/RJ/up4BTDOX9Ntt.E1xObixppt75R/ljbhvOiR5mHIy5r4G', 1, 'instrutor@instrutor.com', '2020-01-04');